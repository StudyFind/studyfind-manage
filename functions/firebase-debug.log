[debug] [2021-04-18T16:27:08.850Z] ----------------------------------------------------------------------
[debug] [2021-04-18T16:27:08.854Z] Command:       /Users/yohanjhaveri/.nvm/versions/node/v15.12.0/bin/node /usr/local/bin/firebase deploy --except functions
[debug] [2021-04-18T16:27:08.854Z] CLI Version:   9.2.1
[debug] [2021-04-18T16:27:08.854Z] Platform:      darwin
[debug] [2021-04-18T16:27:08.854Z] Node Version:  v15.12.0
[debug] [2021-04-18T16:27:08.891Z] Time:          Sun Apr 18 2021 12:27:08 GMT-0400 (Eastern Daylight Time)
[debug] [2021-04-18T16:27:08.891Z] ----------------------------------------------------------------------
[debug] [2021-04-18T16:27:08.891Z] 
[debug] [2021-04-18T16:27:08.899Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-04-18T16:27:08.900Z] > authorizing via signed-in user
[debug] [2021-04-18T16:27:08.900Z] [iam] checking project studyfind-researcher for permissions ["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get","firebasehosting.sites.update"]
[debug] [2021-04-18T16:27:08.902Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2021-04-18T16:27:08.903Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-04-18T16:27:09.012Z] <<< HTTP RESPONSE 200 {"expires":"Mon, 01 Jan 1990 00:00:00 GMT","date":"Sun, 18 Apr 2021 16:27:09 GMT","pragma":"no-cache","cache-control":"no-cache, no-store, max-age=0, must-revalidate","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-04-18T16:27:09.027Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/studyfind-researcher:testIamPermissions  
 {"permissions":["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get","firebasehosting.sites.update"]}
[debug] [2021-04-18T16:27:09.154Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sun, 18 Apr 2021 16:27:09 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=85","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-04-18T16:27:09.159Z] > refreshing access token with scopes: []
[debug] [2021-04-18T16:27:09.159Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-04-18T16:27:09.220Z] <<< HTTP RESPONSE 200 {"date":"Sun, 18 Apr 2021 16:27:09 GMT","cache-control":"no-cache, no-store, max-age=0, must-revalidate","expires":"Mon, 01 Jan 1990 00:00:00 GMT","pragma":"no-cache","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-04-18T16:27:09.239Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/studyfind-researcher [none]
[debug] [2021-04-18T16:27:09.387Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/studyfind-researcher 200
[debug] [2021-04-18T16:27:09.387Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/studyfind-researcher {"projectId":"studyfind-researcher","projectNumber":"434311866185","displayName":"studyfind","name":"projects/studyfind-researcher","resources":{"hostingSite":"studyfind-researcher","realtimeDatabaseInstance":"studyfind-researcher","storageBucket":"studyfind-researcher.appspot.com","locationId":"us-central"},"state":"ACTIVE"}
[warn] âš   functions: package.json indicates an outdated version of firebase-functions.
Please upgrade using npm install --save firebase-functions@latest in your functions directory. 
[info] 
[info] === Deploying to 'studyfind-researcher'...
[info] 
[info] i  deploying firestore, hosting 
[info] i  firestore: reading indexes from firestore.indexes.json... 
[info] i  cloud.firestore: checking firestore.rules for compilation errors... 
[debug] [2021-04-18T16:27:12.090Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2021-04-18T16:27:12.090Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-04-18T16:27:12.152Z] <<< HTTP RESPONSE 200 {"expires":"Mon, 01 Jan 1990 00:00:00 GMT","cache-control":"no-cache, no-store, max-age=0, must-revalidate","date":"Sun, 18 Apr 2021 16:27:12 GMT","pragma":"no-cache","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-04-18T16:27:12.202Z] >>> HTTP REQUEST POST https://firebaserules.googleapis.com/v1/projects/studyfind-researcher:test  
 {"source":{"files":[{"name":"firestore.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n  \tmatch /researchers/{researcherID} {\n    \tallow read, delete: if researcherID == request.auth.uid\n      allow create: if researcherID == request.auth.uid && request.resource.data.name != null\n      allow update: if researcherID == request.auth.uid && request.resource.data.name == resource.data.name\n\n      match /notifications/{notificationID} {\n      \tallow read: if researcherID == request.auth.uid\n        allow update: if researcherID == request.auth.uid\n        \t&& resource.data.title == request.resource.data.title\n          && resource.data.description == request.resource.data.description\n          && resource.data.time == request.resource.data.time\n          && resource.data.type == request.resource.data.type\n          && resource.data.read == false && request.resource.data.read == true\n      }\n    }\n\n    match /participants/{participantID} {\n    \tallow read, delete: if participantID == request.auth.uid\n      allow create: if participantID == request.auth.uid && request.resource.data.name != null\n      allow update: if participantID == request.auth.uid && request.resource.data.name == resource.data.name\n\n\n      match /notifications/{notificationID} {\n      \tallow read: if participantID == request.auth.uid\n        allow update: if participantID == request.auth.uid\n        \t&& resource.data.title == request.resource.data.title\n          && resource.data.description == request.resource.data.description\n          && resource.data.time == request.resource.data.time\n          && resource.data.type == request.resource.data.type\n          && resource.data.read == false && request.resource.data.read == true\n      }\n    }\n\n    match /studies/{studyID} {\n      allow read, update, delete: if resource.data.researcher.id == request.auth.uid\n      allow read: if request.auth != null\n\n      match /surveys/{surveyID} {\n        \tallow read, write: if true\n      }\n      // allow read if custom claim is participant\n\n      match /participants/{participantID} {\n        allow read: if participantID == request.auth.uid\n        allow create: if participantID == request.auth.uid && request.resource.data.status == \"interested\"\n        allow read, update, delete: if getStudyData(studyID).researcher.id == request.auth.uid\n\n\n        // allow create by participant\n\n\n        match /notes/{noteID} {\n          allow read, write: if getStudyData(studyID).researcher.id == request.auth.uid\n        }\n\n        match /messages/{messageID} {\n          allow read: if getStudyData(studyID).researcher.id == request.auth.uid || participantID == request.auth.uid\n          allow create: if request.resource.data.user == request.auth.uid && (getStudyData(studyID).researcher.id == request.auth.uid || participantID == request.auth.uid)\n          allow update: if resource.data.user != request.auth.uid && (getStudyData(studyID).researcher.id == request.auth.uid || participantID == request.auth.uid) // can update each others' reads\n            && resource.data.user == request.resource.data.user\n            && resource.data.time == request.resource.data.time\n            && resource.data.text == request.resource.data.text\n            && resource.data.read == false && request.resource.data.read == true\n        }\n    \t}\n    }\n\n    // match reminders\n    match /reminders/{reminderID} {\n    \tallow read: if request.auth.uid == resource.data.participantID || request.auth.uid == getStudyData(resource.data.studyID).researcher.id\n\n      allow update: if request.auth.uid == resource.data.participantID\n          && resource.data.startDate == request.resource.data.startDate\n          && resource.data.endDate == request.resource.data.endDate\n          && resource.data.times == request.resource.data.times\n          && resource.data.title == request.resource.data.title\n          && resource.data.participantID == request.resource.data.participantID\n          && resource.data.studyID == request.resource.data.studyID\n          && resource.data.confirmedByParticipant == false && request.resource.data.confirmedByParticipant == true\n\n      allow update: if request.auth.uid == getStudyData(request.resource.data.studyID).researcher.id\n          && resource.data.participantID == request.resource.data.participantID\n          && resource.data.studyID == request.resource.data.studyID\n          && resource.data.confirmedByParticipant == request.resource.data.confirmedByParticipant\n\n      allow create: if request.auth.uid == getStudyData(request.resource.data.studyID).researcher.id\n      allow delete: if request.auth.uid == getStudyData(resource.data.studyID).researcher.id\n    }\n\n    match /meetings/{meetingID} {\n    \tallow read: if request.auth.uid == resource.data.participantID || request.auth.uid == getStudyData(resource.data.studyID).researcher.id || request.auth.uid == resource.data.researcherID\n\n      allow update: if (request.auth.uid == resource.data.participantID\n          && resource.data.name == request.resource.data.name\n          && resource.data.link == request.resource.data.link\n          && resource.data.time == request.resource.data.time\n          && resource.data.participantID == request.resource.data.participantID\n          && resource.data.researcherID == request.resource.data.researcherID\n          && resource.data.studyID == request.resource.data.studyID\n          && resource.data.confirmedByParticipant == false && request.resource.data.confirmedByParticipant == true)\n\t\t\t\t\t|| (request.auth.uid == getStudyData(request.resource.data.studyID).researcher.id\n          && resource.data.participantID == request.resource.data.participantID\n          && resource.data.researcherID == request.resource.data.researcherID\n          && resource.data.studyID == request.resource.data.studyID\n          && resource.data.confirmedByParticipant == request.resource.data.confirmedByParticipant)\n\n      allow create: if request.auth.uid == getStudyData(request.resource.data.studyID).researcher.id\n      allow delete: if request.auth.uid == getStudyData(resource.data.studyID).researcher.id\n    }\n\n    match /feedback/{feedbackID} {\n    \tallow write: if request.auth != null\n    }\n\n    // fetch a study from firestore\n    function getStudyData(studyID) {\n    \treturn get(/databases/$(database)/documents/studies/$(studyID)).data\n    }\n  }\n}\n"}]}}
[debug] [2021-04-18T16:27:12.660Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sun, 18 Apr 2021 16:27:12 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] âœ”  cloud.firestore: rules file firestore.rules compiled successfully 
[debug] [2021-04-18T16:27:12.663Z] >>> HTTP REQUEST POST https://firebasehosting.googleapis.com/v1beta1/sites/studyfind-researcher/versions  
 {"config":{"rewrites":[{"glob":"**","path":"/index.html"}]},"labels":{"deployment-tool":"cli-firebase"}}
[debug] [2021-04-18T16:27:13.475Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sun, 18 Apr 2021 16:27:13 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-04-18T16:27:13.477Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/studyfind-researcher/releases?pageSize=10&pageToken=  
 
[debug] [2021-04-18T16:27:13.478Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/studyfind-researcher/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2021-04-18T16:27:13.665Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sun, 18 Apr 2021 16:27:13 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-04-18T16:27:13.668Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/studyfind-researcher/rulesets/e2fc0893-a851-4fd3-ae49-45476b60600d  
 
[debug] [2021-04-18T16:27:13.800Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sun, 18 Apr 2021 16:27:13 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] i  firestore: latest version of firestore.rules already up to date, skipping upload... 
[debug] [2021-04-18T16:27:13.863Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sun, 18 Apr 2021 16:27:13 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-04-18T16:27:13.864Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/studyfind-researcher/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2021-04-18T16:27:14.192Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sun, 18 Apr 2021 16:27:14 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] i  firestore: The following indexes are defined in your project but are not present in your firestore indexes file:
	(meetings) -- (researcherID,ASCENDING) (time,ASCENDING) 
	(reminders) -- (times,CONTAINS) (endDate,ASCENDING) 
	(studies) -- (researcher.id,ASCENDING) (updatedAt,DESCENDING) 
	(studies) -- (published,ASCENDING) (researcher.id,ASCENDING) (updatedAt,DESCENDING) 
	(meetings) -- (participantID,ASCENDING) (studyID,ASCENDING) (time,DESCENDING)  
